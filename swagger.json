{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger R2D2",
    "description": "\n\nSome useful links:\n- [The R2D2 repository](https://github.com/swagger-api/swagger-petstore)",
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "http://localhost:4000"
    }
  ],
  "tags": [
    {
      "name": "movies",
      "description": "Everything about Star Wars movies",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/movies": {
      "get": {
        "tags": [
          "movies"
        ],
        "summary": "Return movies in database",
        "description": "Return movies in database",
        "operationId": "returnMovies",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Movie"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "post": {
        "tags": [
          "movies"
        ],
        "summary": "Add a new movie to the database",
        "description": "Add a new movie to the database",
        "operationId": "addMovie",
        "requestBody": {
          "description": "Add a new movie to the database",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Movie"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Movie"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Movie"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/movies/{movieId}": {
      "put": {
        "tags": [
          "movies"
        ],
        "summary": "Update an existing movie",
        "description": "Update a movie by Id",
        "operationId": "updateMovie",
        "parameters": [
          {
            "name": "movieId",
            "in": "path",
            "description": "Movie id to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update a movie",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Movie"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Movie not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "movies"
        ],
        "summary": "Deletes a movie",
        "description": "delete a movie",
        "operationId": "deleteMovie",
        "parameters": [
          {
            "name": "movieId",
            "in": "path",
            "description": "Movie id to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid pet value"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Movie": {
        "required": [
          "name",
          "trilogy",
          "sequential",
          "year"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "trilogy": {
            "type": "string",
            "example": "classic"
          },
          "sequential": {
            "type": "string",
            "example": "1"
          },
          "year": {
            "type": "integer",
            "example": 1997
          }
        },
        "xml": {
          "name": "movies"
        }
      }
    },
    "requestBodies": {
      "Movie": {
        "description": "Movie object that needs to be added",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Movie"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Movie"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Movie"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}